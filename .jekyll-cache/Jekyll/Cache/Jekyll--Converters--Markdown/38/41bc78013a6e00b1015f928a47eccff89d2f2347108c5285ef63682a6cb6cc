I"6<p>Cron allows Linux and Unix users to run commands or scripts at a given date and time. You can schedule scripts to be executed periodically. It is usually used for sysadmin jobs such as backups or cleaning /tmp/ directories and more. The cron service (daemon) runs in the background and constantly checks the /etc/crontab file, and /etc/cron.*/ directories. It also checks the /var/spool/cron/ directory.</p>

<h4 id="how-do-i-install-or-create-or-edit-my-own-cron-jobs">How Do I install or create or edit my own cron jobs?</h4>

<p>To edit or create your own crontab file, type the following command at the UNIX / Linux shell prompt:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ crontab -e
</code></pre></div></div>

<h4 id="do-i-have-to-restart-cron-after-changing-the-crontable-file">Do I have to restart cron after changing the crontable file?</h4>
<p>No. Cron will examine the modification time on all crontabs and reload those which have changed. Thus cron need not be restarted whenever a crontab file is modified.</p>

<p>Syntax of crontab (field description)
The syntax is:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1 2 3 4 5 /path/to/command arg1 arg2
OR

1 2 3 4 5 /root/backup.sh
</code></pre></div></div>

<p>Where,</p>

<p>1: Minute (0-59)</p>

<p>2: Hours (0-23)</p>

<p>3: Day (0-31)</p>

<p>4: Month (0-12 [12 == December])</p>

<p>5: Day of the week(0-7 [7 or 0 == sunday])</p>

<p>/path/to/command – Script or command name to schedule</p>

<h4 id="easy-to-remember-format">Easy to remember format:</h4>

<ul>
  <li>
    <ul>
      <li>
        <ul>
          <li>
            <ul>
              <li>
                <ul>
                  <li>command to be executed</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gd">- - - - -
</span><span class="err">|</span> | | | |
<span class="err">|</span> | | | ----- Day of week (0 - 7) (Sunday=0 or 7)
<span class="err">|</span> | | ------- Month (1 - 12)
<span class="err">|</span> | --------- Day of month (1 - 31)
<span class="err">|</span> ----------- Hour (0 - 23)
<span class="gd">------------- Minute (0 - 59)
</span></code></pre></div></div>

<p>Your cron job looks as follows for system jobs:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1 2 3 4 5 USERNAME /path/to/command arg1 arg2

OR

1 2 3 4 5 USERNAME /path/to/script.sh
</code></pre></div></div>

<h4 id="schedule-a-job-for-more-than-one-instance-eg-twice-a-day">Schedule a Job For More Than One Instance (e.g. Twice a Day)</h4>
<p>The following script take a incremental backup twice a day every day.</p>

<p>This example executes the specified incremental backup shell script (incremental-backup) at 11:00 and 16:00 on every day. The comma separated value in a field specifies that the command needs to be executed in all the mentioned time.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>00 11,16 * * * /home/ramesh/bin/incremental-backup
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>00 – 0th Minute (Top of the hour)
11,16 – 11 AM and 4 PM
* – Every day
* – Every month
* – Every day of the week
</code></pre></div></div>

<h4 id="schedule-a-job-for-specific-range-of-time-eg-only-on-weekdays">Schedule a Job for Specific Range of Time (e.g. Only on Weekdays)</h4>
<p>If you wanted a job to be scheduled for every hour with in a specific range of time then use the following.</p>

<p>Cron Job everyday during working hours
This example checks the status of the database everyday (including weekends) during the working hours 9 a.m – 6 p.m</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>00 09-18 * * * /home/ramesh/bin/check-db-status
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>00 – 0th Minute (Top of the hour)
09-18 – 9 am, 10 am,11 am, 12 am, 1 pm, 2 pm, 3 pm, 4 pm, 5 pm, 6 pm
* – Every day
* – Every month
* – Every day of the week
</code></pre></div></div>

<p>Cron Job every weekday during working hours
This example checks the status of the database every weekday (i.e excluding Sat and Sun) during the working hours 9 a.m – 6 p.m.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>00 09-18 * * 1-5 /home/ramesh/bin/check-db-status
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>00 – 0th Minute (Top of the hour)
09-18 – 9 am, 10 am,11 am, 12 am, 1 pm, 2 pm, 3 pm, 4 pm, 5 pm, 6 pm
* – Every day
* – Every month
1-5 -Mon, Tue, Wed, Thu and Fri (Every Weekday)
</code></pre></div></div>

<h4 id="how-to-view-crontab-entries">How to View Crontab Entries?</h4>
<p>View Current Logged-In User’s Crontab entries
To view your crontab entries type crontab -l from your unix account as shown below.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ramesh@dev-db$ crontab -l
@yearly /home/ramesh/annual-maintenance
*/10 * * * * /home/ramesh/check-disk-space

[Note: This displays crontab of the current logged in user]
</code></pre></div></div>

<h4 id="how-to-edit-crontab-entries">How to Edit Crontab Entries?</h4>
<p>Edit Current Logged-In User’s Crontab entries
To edit a crontab entries, use crontab -e as shown below. By default this will edit the current logged-in users crontab.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ramesh@dev-db$ crontab -e
@yearly /home/ramesh/centos/bin/annual-maintenance
*/10 * * * * /home/ramesh/debian/bin/check-disk-space
~
"/tmp/crontab.XXXXyjWkHw" 2L, 83C

[Note: This will open the crontab file in Vim editor for editing.
Please note cron created a temporary /tmp/crontab.XX... ]
</code></pre></div></div>

<p>When you save the above temporary file with :wq, it will save the crontab and display the following message indicating the crontab is successfully modified.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~
"crontab.XXXXyjWkHw" 2L, 83C written
crontab: installing new crontab
</code></pre></div></div>

<p>Edit Root Crontab entries
Login as root user (su – root) and do crontab -e as shown below.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@dev-db# crontab -e

</code></pre></div></div>
:ET