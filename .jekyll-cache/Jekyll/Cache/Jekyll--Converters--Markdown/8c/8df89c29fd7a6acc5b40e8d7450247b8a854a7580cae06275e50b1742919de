I"<h5 id="below-are-the-detailed-steps-to-install-python-and-robot-framework-through-pip--">Below are the detailed steps to install Python and robot framework through PIP :-</h5>
<p><strong>Step  1 – Install Python and PIP</strong></p>
<ul>
  <li>Go to python.org <a href="https://www.python.org/downloads/">Python 3.7</a> and download desired version (suggested – 3.7)</li>
</ul>

<p><img src="../../../../img/python_rf_install/python.jpg" alt="alt text" /></p>
<ul>
  <li>Check <strong>Add Python 3.7 to path</strong></li>
</ul>

<p><img src="../../../../img/python_rf_install/add.jpg" alt="alt text" /></p>

<ul>
  <li>Click Install Now</li>
  <li>Once installation was successful, Go to <strong>cmd</strong> and type <strong><em>Python -V</em></strong>, it will display the installed version.</li>
</ul>

<p><img src="../../../../img/python_rf_install/pycmd.jpg" alt="alt text" /></p>

<ul>
  <li>PIP will get installed with python automatically, use PIP list command in the cmd to check the installation successful or not.</li>
</ul>

<p><strong>Step # 2 – Install Robot framework and Selenium library through PIP</strong></p>

<ul>
  <li>Use this command <strong><em>pip install robotframework</em></strong> for robot framework library</li>
  <li>Use this command <strong><em>pip install robotframework-seleniumlibrary</em></strong> for selenium library</li>
  <li>Use this command <strong><em>pip install robotframework-pabot</em></strong> for pabot library for parallel execution</li>
  <li>Use this command <strong><em>pip install robotframework-metrics</em></strong> for metrics library</li>
  <li>Use this command <strong><em>pip install -U requests</em></strong> for python requests library</li>
  <li>Use this command <strong><em>pip install -U robotframework-requests</em></strong> for robotframework requests library</li>
</ul>

<p><img src="../../../../img/python_rf_install/alllib.jpg" alt="alt text" /></p>

<ul>
  <li>Note: you can use <strong><em>pip list</em></strong> command to see your installation is successful</li>
</ul>

<p><strong>Step # 3 – Install Pycharm</strong></p>
<ul>
  <li>Go to this link – <a href="https://www.jetbrains.com/pycharm/download/#section=windows">Pycharm downloads</a></li>
  <li>Download and install <strong><em>Community edition</em></strong></li>
</ul>

<p><img src="../../../../img/python_rf_install/pycharm.jpg" alt="alt text" /></p>

<ul>
  <li>Click Pycharm installation file</li>
  <li>Complete the Installation</li>
</ul>

<p><strong>Step # 4 – Configure Pycharm - intall required plugins</strong></p>
<ul>
  <li>Steps to install plug-in
    <ol>
      <li>Open Pycharm</li>
      <li>Go to File –&gt; settings –&gt; Click plug-ins</li>
    </ol>
  </li>
  <li>Install <strong><em>IntelliBot @SeleniumLibrary Patched</em></strong> Refer <a href="https://www.jetbrains.com/pycharm/download/#section=windows">IntelliBot</a></li>
  <li>Install <strong><em>Material Theme UI Plugin</em></strong> Refer <a href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui/">Material Theme</a></li>
  <li>Install <strong><em>CMD Support</em></strong> Refer <a href="https://plugins.jetbrains.com/plugin/5834-cmd-support/">CMD Support</a></li>
</ul>

<p><strong><em>Please Restart pycharm to activate all the plugins</em></strong></p>

<p><strong>Step # 5 – Download Web drivers and Configure browser settings</strong></p>

<p><strong><em>Purpose of Web Driver: Web driver is a library which helps to communicate between your test automation scripts and browsers</em></strong></p>
<ul>
  <li>Please download <a href="https://www.seleniumhq.org/download/">IE web driver</a></li>
</ul>

<p><img src="../../../../img/python_rf_install/IE.jpg" alt="alt text" /></p>

<ul>
  <li>Please download <a href="https://www.seleniumhq.org/download/">Chrome and Firefox web driver</a></li>
</ul>

<p><img src="../../../../img/python_rf_install/CF.jpg" alt="alt text" /></p>

<ul>
  <li>Create a bin directory(<strong>Anywhere</strong>) and copy the downloaded web drivers to bin directory and add Path</li>
  <li>(C:\bin) to environmental variables (<strong><em>Advanced system settings</em></strong> –&gt; <strong><em>Environment variables</em></strong> –&gt; <strong><em>System variables</em></strong> –&gt; <strong><em>select Path</em></strong> –&gt; <strong><em>click Edit</em></strong> –&gt; <strong><em>Add C:\bin directory</em></strong>)</li>
</ul>

<p><img src="../../../../img/python_rf_install/env.jpg" alt="alt text" /></p>

<p><strong><em>Note: If you add path to Environment variables, Robot framework (SeleniumLibrary) will automatically recognize the web drivers, thereby, you don’t need to explicitly mention web driver path in your test scripts.</em></strong></p>

<p><strong><em>OR</em></strong></p>

<p>We can also add the drivers in the scripts folder of python, As python folder is already added to the Path</p>

<p><img src="../../../../img/python_rf_install/pyfolder.jpg" alt="alt text" /></p>

<h3 id="references">References:</h3>
<p><a href="https://5and3.co.uk/articles/effective-website-tests-with-robot-framework-and-selenium/">Selenium RB </a></p>
:ET