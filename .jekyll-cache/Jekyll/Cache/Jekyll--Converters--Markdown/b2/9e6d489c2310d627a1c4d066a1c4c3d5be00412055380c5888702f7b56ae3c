I"Å<p>This article is a tutorial on how to configure Charles Proxy to inspect traffic over cellular networks, and while it‚Äôs designed with ad operations use cases in mind, it‚Äôs applicable to any front end web developer with similar needs.</p>

<p>There are many articles out there on how to use Charles Proxy through your phone ‚Äì I‚Äôve written two myself, in fact. All those articles assume you‚Äôre leveraging a Wifi network when connecting to the internet, however and while that‚Äôs fine for basic testing on mobile web and mobile apps, there are often reasons why you want to inspect traffic over a true cellular network instead.</p>

<p>Perhaps you need to debug an ad that relies on carrier targeting, or you want to measure data usage or network latency through a true cellular connection.  These are more advanced use cases to be sure, but when you can‚Äôt get by with using your phone with Charles over Wifi, or a mobile emulator in Developer Tools.  Plus, Charles Proxy offers a host of powerful features like breakpoints, which you can use to test an experience in stages, or rewrite rules to reference a local file before you update your server, or blacklisting, which can be helpful to isolate the root of various technical problems.</p>

<p>The Hardware Setup
Before you start, you‚Äôll need:</p>

<p>A laptop running Charles Proxy.  I‚Äôm using a Mac in this case, but you could do this with a PC as well.
Two phones, at least one which can be enabled as a mobile hotspot.  I‚Äôm using two iPhone 7 in this case, but you could do this with Android devices as well.
Yes, unfortunately you‚Äôll need two phones to setup this rig ‚Äì the first is used as a mobile hotspot, the second to actually browse the web / app you need to test.  The reason you can‚Äôt simply run the connection over a single phone is because you have to manually set the IP address and port of your network connection for Charles to inspect your traffic, and you can‚Äôt do that on your phone‚Äôs cellular connection.  Creating a mobile hotspot however gives you the ability the adjust those settings on the device connecting through it.  So you‚Äôre using one phone for its mobile network and the other phone as the client that proxies requests through Charles.</p>

<p><img src="../../../../img/CharlesProxy/CPArch.jpg" alt="alt text" /></p>

<h4 id="references">References:</h4>
<p><a href="https://benoitpasquier.com/charles-ssl-proxy-ios/">For iOS setup1</a></p>

<p><a href="https://www.raywenderlich.com/1827524-charles-proxy-tutorial-for-ios">For iOS setup2</a></p>

<p><a href="https://community.tealiumiq.com/t5/Tealium-for-Android/Setting-up-Charles-to-Proxy-your-Android-Device/ta-p/5121">For Andriod setup 1</a></p>

<p><a href="https://www.youtube.com/watch?v=pubDgXKUXok">For Andriod setup 2</a></p>

<p><a href="https://medium.com/@hackupstate/using-charles-proxy-to-debug-android-ssl-traffic-e61fc38760f7">For Andriod setup 3</a></p>

<p><a href="https://stackoverflow.com/questions/17823434/ssl-proxy-charles-and-android-trouble">For Andriod setup 4</a></p>

<p><a href="https://willowtreeapps.com/ideas/a-quick-guide-to-charles-a-web-debugging-proxy-application">For Andriod setup 5</a></p>

:ET